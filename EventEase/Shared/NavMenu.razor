@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components
@inject EventEase.Services.UserSessionService UserSessionService
@inject NavigationManager NavigationManager

<link href="css/site.css" rel="stylesheet" />

<div class="navbar">
    <a class="navbar-brand" href="">EventEase</a>
    <ul class="nav flex-column">
        <li class="nav-item">
            <NavLink class="nav-link" href="">Home</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="events">Events</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="register">Register Event</NavLink>
        </li>
        @if (UserSessionService.IsSessionActive())
        {
            <li class="nav-item">
                <button class="nav-link btn btn-link" @onclick="Logout">Logout</button>
            </li>
        }
        else
        {
            <li class="nav-item">
                <NavLink class="nav-link" href="login">Login</NavLink>
            </li>
        }
    </ul>
    @if (UserSessionService.IsSessionActive())
    {
        <div class="user-session">
            <p>Welcome, @UserSessionService.UserName</p>
            <p>Session started at: @UserSessionService.SessionStartTime</p>
        </div>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        UserSessionService.OnSessionChanged += StateHasChanged;
    }

    private void Logout()
    {
        UserSessionService.EndSession();
        NavigationManager.NavigateTo("/");
    }

    public void Dispose()
    {
        UserSessionService.OnSessionChanged -= StateHasChanged;
    }
}
