@page "/eventdetails/{eventName}/{presentedBy}"
@inject EventEase.Services.EventService EventService
@inject EventEase.Services.AttendanceService AttendanceService
@inject EventEase.Services.UserSessionService UserSessionService
@using EventEase.Models

<h3>Event Details</h3>

@if (eventDetails != null)
{
    <div>
        <h4>@eventDetails.Name</h4>
        <p>Date: @eventDetails.Date.ToShortDateString()</p>
        <p>Location: @eventDetails.Location</p>
        <p>Description: @eventDetails.Description</p>
        <p>Presented By: @eventDetails.PresentedBy</p>
        <p>Attendance: @AttendanceService.GetAttendanceCount(eventDetails.Id)</p>
        @if (UserSessionService.IsSessionActive())
        {
            @if (isUserAttending)
            {
                <button class="btn btn-secondary" @onclick="RemoveAttendance">Nevermind</button>
            }
            else
            {
                <button class="btn btn-primary" @onclick="RegisterAttendance">I'd like to attend</button>
            }
        }
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public required string eventName { get; set; }

    [Parameter]
    public required string presentedBy { get; set; }

    private Event? eventDetails;
    private bool isUserAttending;

    protected override void OnInitialized()
    {
        eventDetails = EventService.GetEvents().FirstOrDefault(e => e.Name == eventName && e.PresentedBy == presentedBy);

        if (eventDetails != null && UserSessionService.IsSessionActive())
        {
            isUserAttending = AttendanceService.IsUserAttending(eventDetails.Id, UserSessionService.UserName);
        }
    }

    private void RegisterAttendance()
    {
        if (eventDetails != null && UserSessionService.IsSessionActive())
        {
            AttendanceService.RegisterAttendance(eventDetails.Id, UserSessionService.UserName);
            isUserAttending = true;
        }
    }

    private void RemoveAttendance()
    {
        if (eventDetails != null && UserSessionService.IsSessionActive())
        {
            AttendanceService.RemoveAttendance(eventDetails.Id, UserSessionService.UserName);
            isUserAttending = false;
        }
    }
}
